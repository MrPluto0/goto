/*
Copyright Â© 2023 Gypsophlia <710852553@qq.com>
Generated by cobra-cli
*/
package cmd

import (
	"fmt"
	"goto/interfaces"
	"goto/utils"
	"strings"

	"github.com/spf13/cobra"
)

// addCmd represents the add command
var addCmd = &cobra.Command{
	Use:   "add [name]",
	Short: "Add a new task",
	Args:  cobra.ExactArgs(1),
	RunE: func(cmd *cobra.Command, args []string) error {
		tasks, err := utils.ReadFile(dbFile)
		if err != nil {
			return err
		}

		var newTask interfaces.Task
		newTask.Name = args[0]

		// check if name is repeat
		if utils.IsContain(args[0], tasks) {
			return fmt.Errorf("the name already exists")
		}

		// input more info
		input := utils.InputLn("Please input the alias of your task. Use blank space to split.")
		newTask.Alias = strings.Split(input, " ")
		input = utils.InputLn("Please input the command of your task.")
		newTask.Command = input

		tasks = append(tasks, newTask)
		err = utils.WriteFile(dbFile, tasks)
		return err
	},
}

func init() {
	rootCmd.AddCommand(addCmd)

	// Here you will define your flags and configuration settings.

	// Cobra supports Persistent Flags which will work for this command
	// and all subcommands, e.g.:
	// addCmd.PersistentFlags().String("foo", "", "A help for foo")

	// Cobra supports local flags which will only run when this command
	// is called directly, e.g.:
	// addCmd.Flags().BoolP("toggle", "t", false, "Help message for toggle")
}
